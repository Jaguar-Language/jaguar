#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative "lexer"
require_relative "nodes"
require_relative "parse_error"

module Jaguar

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 152)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code)
    puts @tokens.inspect if show_tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end

  def on_error(error_token_id, error_value, value_stack)
    raise ParseError.new(token_to_str(error_token_id), error_value, value_stack)
  end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    26,    84,    25,    54,    24,    15,    17,    18,    19,    20,
    21,    22,    23,    26,    15,    25,    88,    24,    15,    17,
    18,    19,    20,    21,    22,    23,    54,    15,    82,    29,
    90,   -63,   -63,   -63,   -63,    26,    96,    25,    14,    24,
    16,    17,    18,    19,    20,    21,    22,    23,    26,    16,
    25,    14,    24,    16,    17,    18,    19,    20,    21,    22,
    23,    29,    16,    42,    43,    38,    39,    95,    26,   101,
    25,    54,    24,    14,    17,    18,    19,    20,    21,    22,
    23,    26,    92,    25,    91,    24,    14,    17,    18,    19,
    20,    21,    22,    23,    29,    95,    42,    43,    38,    39,
    92,    26,    97,    25,    60,    24,    14,    17,    18,    19,
    20,    21,    22,    23,    26,    92,    25,   104,    24,    14,
    17,    18,    19,    20,    21,    22,    23,    29,    84,   -63,
   -63,   -63,   -63,    58,    26,    56,    25,    98,    24,    14,
    17,    18,    19,    20,    21,    22,    23,    26,    55,    25,
    48,    24,    14,    17,    18,    19,    20,    21,    22,    23,
   102,    54,    27,   nil,   nil,   nil,   nil,    26,   nil,    25,
   nil,    24,    14,    17,    18,    19,    20,    21,    22,    23,
    26,   nil,    25,   nil,    24,    14,    17,    18,    19,    20,
    21,    22,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    26,   nil,    25,   nil,    24,    14,    17,    18,    19,    20,
    21,    22,    23,    26,   nil,    25,   nil,    24,    14,    17,
    18,    19,    20,    21,    22,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    26,   nil,    25,   nil,    24,    14,    17,
    18,    19,    20,    21,    22,    23,    26,   nil,    25,   nil,
    24,    14,    17,    18,    19,    20,    21,    22,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,    25,   nil,
    24,    14,    17,    18,    19,    20,    21,    22,    23,    26,
   nil,    25,   nil,    24,    14,    17,    18,    19,    20,    21,
    22,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,
   nil,    25,   nil,    24,    14,    17,    18,    19,    20,    21,
    22,    23,    26,   nil,    25,   nil,    24,    14,    17,    18,
    19,    20,    21,    22,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    25,   nil,    24,    14,    17,    18,
    19,    20,    21,    22,    23,    26,   nil,    25,   nil,    24,
    14,    17,    18,    19,    20,    21,    22,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   nil,    25,   nil,    24,
    14,    17,    18,    19,    20,    21,    22,    23,    26,   nil,
    25,   nil,    24,    14,    17,    18,    19,    20,    21,    22,
    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,
    25,   nil,    24,    14,    17,    18,    19,    20,    21,    22,
    23,    26,   nil,    25,   nil,    24,    14,    17,    18,    19,
    20,    21,    22,    23,   nil,    54,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    25,   nil,    24,    14,    17,    18,    19,
    20,    21,    22,    23,   nil,   nil,   nil,    51,    53,    14,
    50,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,   nil,   nil,   nil,    29,    14,
    42,    43,    38,    39,    46,    47,    44,    45,    34,    35,
    36,    37,    32,    33,    40,    41,    31,    30,   nil,    54,
   nil,    29,    78,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    30,    29,   nil,    42,    43,    38,    39,    46,    47,    44,
    45,    34,    35,    36,    37,    32,    33,    40,    41,    31,
    29,   nil,    42,    43,    38,    39,    46,    47,    44,    45,
    34,    35,    36,    37,    32,    33,    40,    41,    29,   nil,
    42,    43,    38,    39,    46,    47,    44,    45,    34,    35,
    36,    37,    32,    33,    40,    41,    29,   nil,    42,    43,
    38,    39,    46,    47,    44,    45,    34,    35,    36,    37,
    32,    33,    40,    41,    29,   nil,    42,    43,    38,    39,
    46,    47,    44,    45,    34,    35,    36,    37,    29,   nil,
    42,    43,    38,    39,    46,    47,    44,    45,    29,   nil,
    42,    43,    38,    39,    46,    47,    44,    45,    29,   nil,
    42,    43,    38,    39,    46,    47,    44,    45,    29,   nil,
    42,    43,    38,    39,    46,    47,    44,    45,    29,   nil,
    42,    43,    38,    39,    46,    47,    29,   nil,    42,    43,
    38,    39,    46,    47 ]

racc_action_check = [
    54,    53,    54,   101,    54,    54,    54,    54,    54,    54,
    54,    54,    54,     0,     2,     0,    56,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    56,    85,    53,    70,
    60,    70,    70,    70,    70,    55,    85,    55,    54,    55,
    54,    55,    55,    55,    55,    55,    55,    55,    92,     2,
    92,     0,    92,     0,    92,    92,    92,    92,    92,    92,
    92,    75,    85,    75,    75,    75,    75,    93,    14,    93,
    14,    83,    14,    55,    14,    14,    14,    14,    14,    14,
    14,    90,    79,    90,    79,    90,    92,    90,    90,    90,
    90,    90,    90,    90,    76,    83,    76,    76,    76,    76,
    86,    32,    86,    32,    29,    32,    14,    32,    32,    32,
    32,    32,    32,    32,    51,    99,    51,    99,    51,    90,
    51,    51,    51,    51,    51,    51,    51,    69,    82,    69,
    69,    69,    69,    27,    45,    25,    45,    88,    45,    32,
    45,    45,    45,    45,    45,    45,    45,    46,    24,    46,
     8,    46,    51,    46,    46,    46,    46,    46,    46,    46,
    95,    98,     1,   nil,   nil,   nil,   nil,    47,   nil,    47,
   nil,    47,    45,    47,    47,    47,    47,    47,    47,    47,
    48,   nil,    48,   nil,    48,    46,    48,    48,    48,    48,
    48,    48,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    26,   nil,    26,   nil,    26,    47,    26,    26,    26,    26,
    26,    26,    26,    28,   nil,    28,   nil,    28,    48,    28,
    28,    28,    28,    28,    28,    28,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    30,   nil,    30,   nil,    30,    26,    30,
    30,    30,    30,    30,    30,    30,    31,   nil,    31,   nil,
    31,    28,    31,    31,    31,    31,    31,    31,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    50,   nil,    50,   nil,
    50,    30,    50,    50,    50,    50,    50,    50,    50,    33,
   nil,    33,   nil,    33,    31,    33,    33,    33,    33,    33,
    33,    33,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    34,
   nil,    34,   nil,    34,    50,    34,    34,    34,    34,    34,
    34,    34,    35,   nil,    35,   nil,    35,    33,    35,    35,
    35,    35,    35,    35,    35,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    36,   nil,    36,   nil,    36,    34,    36,    36,
    36,    36,    36,    36,    36,    37,   nil,    37,   nil,    37,
    35,    37,    37,    37,    37,    37,    37,    37,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,   nil,    38,   nil,    38,
    36,    38,    38,    38,    38,    38,    38,    38,    39,   nil,
    39,   nil,    39,    37,    39,    39,    39,    39,    39,    39,
    39,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,
    40,   nil,    40,    38,    40,    40,    40,    40,    40,    40,
    40,    41,   nil,    41,   nil,    41,    39,    41,    41,    41,
    41,    41,    41,    41,   nil,    22,   nil,   nil,   nil,   nil,
   nil,    44,   nil,    44,   nil,    44,    40,    44,    44,    44,
    44,    44,    44,    44,   nil,   nil,   nil,    22,    22,    41,
    22,    63,   nil,    63,    63,    63,    63,    63,    63,    63,
    63,    63,    63,    63,    63,   nil,   nil,   nil,    49,    44,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    49,   nil,    57,
   nil,    57,    49,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
    57,     3,   nil,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,   100,   nil,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   100,    81,   nil,    81,    81,    81,    81,    81,    81,    81,
    81,    81,    81,    81,    81,    81,    81,    81,    81,    81,
    81,    59,   nil,    59,    59,    59,    59,    59,    59,    59,
    59,    59,    59,    59,    59,    59,    59,    59,    59,    59,
    59,    80,   nil,    80,    80,    80,    80,    80,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
    80,    77,   nil,    77,    77,    77,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
    77,    61,   nil,    61,    61,    61,    61,    61,    61,    61,
    61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
    62,   nil,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    62,    62,    62,    62,    62,    71,   nil,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    72,   nil,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    64,   nil,    64,    64,    64,    64,
    64,    64,    64,    64,    64,    64,    64,    64,    67,   nil,
    67,    67,    67,    67,    67,    67,    67,    67,    65,   nil,
    65,    65,    65,    65,    65,    65,    65,    65,    68,   nil,
    68,    68,    68,    68,    68,    68,    68,    68,    66,   nil,
    66,    66,    66,    66,    66,    66,    66,    66,    74,   nil,
    74,    74,    74,    74,    74,    74,    73,   nil,    73,    73,
    73,    73,    73,    73 ]

racc_action_pointer = [
    11,   162,     7,   494,   nil,   nil,   nil,   nil,   113,   nil,
   nil,   nil,   nil,   nil,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   410,   nil,   108,   121,   198,   133,   211,    91,
   231,   244,    99,   277,   297,   310,   330,   343,   363,   376,
   396,   409,   nil,   nil,   429,   132,   145,   165,   178,   451,
   264,   112,   nil,   -12,    -2,    33,    11,   474,   nil,   554,
   -10,   614,   633,   434,   687,   711,   731,   701,   721,   110,
    12,   651,   669,   749,   741,    44,    77,   594,   nil,    43,
   574,   534,   115,    56,   nil,    20,    61,   nil,   123,   nil,
    79,   nil,    46,    28,   nil,   147,   nil,   nil,   146,    76,
   514,   -12,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -63,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -63,   -17,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -49,   -63,   -63,   -63,   -63,    -5,   -63,
   -63,   -63,   -63,   -63,   -63,   -63,   -63,   -63,   -63,   -63,
   -63,   -63,   -43,   -44,   -63,   -63,   -63,   -63,   -63,   -63,
   -28,   -63,   -53,   -56,   -63,   -28,   -63,   -63,   106,    -4,
   -26,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,   -39,
   -40,   -41,   -42,   -45,   -46,   -47,   -48,   -51,   -16,   -63,
   -29,   -50,   -56,   -63,   -57,   -63,   -63,   -59,   -63,   -61,
   -28,   -25,   -63,   -63,   -55,   -63,   -62,   -52,   -63,   -63,
   -30,   -63,   -58,   -60,   -27,   -54 ]

racc_goto_table = [
     3,    28,     2,    79,     1,   nil,   nil,   nil,    86,   nil,
   nil,   nil,   nil,    83,    49,    52,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,    59,   nil,
    61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
    71,    72,    93,    99,    73,    74,    75,    76,    77,    87,
    89,    81,   nil,   nil,     3,   nil,    85,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   103,   100,   nil,   105 ]

racc_goto_check = [
     3,     4,     2,    14,     1,   nil,   nil,   nil,    14,   nil,
   nil,   nil,   nil,    16,     3,    15,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,   nil,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,    16,    14,     3,     3,     3,     3,     3,    15,
    15,     3,   nil,   nil,     3,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,    15,     3,   nil,    15 ]

racc_goto_pointer = [
   nil,     4,     2,     0,    -1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -47,    -7,   -40 ]

racc_goto_default = [
   nil,   nil,   nil,    80,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 44, :_reduce_1,
  1, 44, :_reduce_2,
  1, 45, :_reduce_3,
  3, 45, :_reduce_4,
  2, 45, :_reduce_5,
  1, 45, :_reduce_6,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  3, 46, :_reduce_16,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 48, :_reduce_19,
  1, 48, :_reduce_20,
  1, 48, :_reduce_21,
  1, 48, :_reduce_22,
  1, 48, :_reduce_23,
  1, 49, :_reduce_24,
  4, 49, :_reduce_25,
  3, 49, :_reduce_26,
  6, 49, :_reduce_27,
  0, 57, :_reduce_28,
  1, 57, :_reduce_29,
  3, 57, :_reduce_30,
  3, 50, :_reduce_31,
  3, 50, :_reduce_32,
  3, 50, :_reduce_33,
  3, 50, :_reduce_34,
  3, 50, :_reduce_35,
  3, 50, :_reduce_36,
  3, 50, :_reduce_37,
  3, 50, :_reduce_38,
  3, 50, :_reduce_39,
  3, 50, :_reduce_40,
  3, 50, :_reduce_41,
  3, 50, :_reduce_42,
  2, 50, :_reduce_43,
  2, 50, :_reduce_44,
  3, 50, :_reduce_45,
  3, 50, :_reduce_46,
  3, 50, :_reduce_47,
  3, 50, :_reduce_48,
  1, 51, :_reduce_49,
  3, 52, :_reduce_50,
  3, 52, :_reduce_51,
  4, 53, :_reduce_52,
  2, 54, :_reduce_53,
  6, 54, :_reduce_54,
  4, 54, :_reduce_55,
  0, 59, :_reduce_56,
  1, 59, :_reduce_57,
  3, 59, :_reduce_58,
  3, 55, :_reduce_59,
  5, 55, :_reduce_60,
  3, 56, :_reduce_61,
  3, 58, :_reduce_62 ]

racc_reduce_n = 63

racc_shift_n = 106

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :CLASS => 4,
  :EXTENDS => 5,
  :SUPER => 6,
  :NEWLINE => 7,
  :NUMBER => 8,
  :STRING => 9,
  :TRUE => 10,
  :FALSE => 11,
  :NULL => 12,
  :IDENTIFIER => 13,
  :CONSTANT => 14,
  :INDENT => 15,
  :DEDENT => 16,
  "." => 17,
  "!" => 18,
  "++" => 19,
  "--" => 20,
  "+=" => 21,
  "-=" => 22,
  "*" => 23,
  "/" => 24,
  "+" => 25,
  "-" => 26,
  ">" => 27,
  ">=" => 28,
  "<" => 29,
  "<=" => 30,
  "==" => 31,
  "!=" => 32,
  "*=" => 33,
  "/=" => 34,
  "&&" => 35,
  "||" => 36,
  "=" => 37,
  ":" => 38,
  "," => 39,
  "(" => 40,
  ")" => 41,
  ";" => 42 }

racc_nt_base = 43

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "CLASS",
  "EXTENDS",
  "SUPER",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NULL",
  "IDENTIFIER",
  "CONSTANT",
  "INDENT",
  "DEDENT",
  "\".\"",
  "\"!\"",
  "\"++\"",
  "\"--\"",
  "\"+=\"",
  "\"-=\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"*=\"",
  "\"/=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\":\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "Constant",
  "Assign",
  "Super",
  "FunctionDeclaration",
  "Class",
  "If",
  "ArgList",
  "Block",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 31)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 36)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 37)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_16(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'grammar.y', 60)
  def _reduce_19(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 61)
  def _reduce_20(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 62)
  def _reduce_21(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 63)
  def _reduce_22(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 64)
  def _reduce_23(val, _values, result)
     result = NullNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 68)
  def _reduce_24(val, _values, result)
     result = CallNode.new(nil, val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 69)
  def _reduce_25(val, _values, result)
     result = CallNode.new(nil, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 70)
  def _reduce_26(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 72)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 76)
  def _reduce_28(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 77)
  def _reduce_29(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 78)
  def _reduce_30(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_31(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 84)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 85)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 91)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 96)
  def _reduce_45(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_46(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_47(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_48(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_49(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_50(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_51(val, _values, result)
     result = SetConstantNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_52(val, _values, result)
     result = SuperNode.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_53(val, _values, result)
     result = DefNode.new(val[0], [], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_54(val, _values, result)
     result = DefNode.new(val[0], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_55(val, _values, result)
     result = DefNode.new(val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_56(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_57(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 125)
  def _reduce_58(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_59(val, _values, result)
     result = ClassNode.new(val[1], val[2], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 130)
  def _reduce_60(val, _values, result)
     result = ClassNode.new(val[1], val[4], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 134)
  def _reduce_61(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 138)
  def _reduce_62(val, _values, result)
     result = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

end
